stages:
  - build
  - docker-nr-deploy
  - docker-sa-deploy
  #- deploy

react-build:
  stage: build
  tags:
    - test
  image: node:18.16.1-alpine
  script: 
    - echo "Start building App"
    - cd frontend
    - npm install .
    - npm run build
    - echo "Build successfully!"
  artifacts:
    #expire_in: 1 hour
    paths:
      - frontend/out

spring-build:
  image: gradle:jdk17
  stage: build
  tags:
    - test
  script:
    - java -version
    - cd backend/oho
    - .\gradlew build
  artifacts:
    paths:
      - backend/oho/build/libs/*.jar
    #expire_in: 10 min

docker-nginx-react-deploy:
  stage: docker-nr-deploy
  tags:
  - test
  variables:
    IMAGE_NAME: zaqxsw1397/nginx-react
  image: docker:latest
  services: 
    - docker:19.03.8-dind
  before_script:
    - echo "$DOCKER_HUB_PW" | docker login -u "$DOCKER_HUB_USER" --password-stdin
  script:
    - cd frontend
    - docker build -t $IMAGE_NAME .
    - docker push $IMAGE_NAME
    - docker run -d --restart always -p 443:443 -p 80:80 --name NGINXREACT $IMAGE_NAME
  after_script:
    - docker logout

docker-spring-api-deploy:
  image: docker:latest
  stage: docker-sa-deploy
  tags:
    - test
  variables:
    IMAGE_NAME: zaqxsw1397/spring-api
  services:
    - docker:19.03.8-dind
  before_script:
    - echo "$DOCKER_HUB_PW" | docker login -u "$DOCKER_HUB_USER" --password-stdin
  script:
    - cd backend/oho
    - docker build -t $IMAGE_NAME .
    - docker push $IMAGE_NAME
    - docker run -d --restart always -p 8080:8080 --name SPRINGAPI $IMAGE_NAME
  after_script:
    - docker logout

deploy-nginx:
  stage: deploy
  tags:
  - test
  before_script:
    - echo "$DOCKER_HUB_PW" | docker login -u "$DOCKER_HUB_USER" --password-stdin
  script:
    - docker stop NGINXREACT || true
    - docker rm NGINXREACT || true
    - docker rmi zaqxsw1397/nginx-react || true
    - docker pull zaqxsw1397/nginx-react
    - docker run -d --restart always -p 443:443 -p 80:80 --name NGINXREACT zaqxsw1397/nginx-react
  after_script:
    - docker logout
  when: on_success
  only:
    - deploy

deploy-was1:
  stage: deploy
  tags:
    - test
  before_script:
    - echo "$DOCKER_HUB_PW" | docker login -u "$DOCKER_HUB_USER" --password-stdin
  script:
    - docker stop SPRINGAPI || true
    - docker rm SPRINGAPI || true
    - docker rmi zaqxsw1397/spring-api || true
    - docker pull zaqxsw1397/spring-api
    - docker run -d --restart always -p 8080:8080 --name SPRINGAPI zaqxsw1397/spring-api
  after_script:
    - docker logout
  when: on_success
  only:
    - deploy
